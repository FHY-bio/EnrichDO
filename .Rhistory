doterms_diminish$child.len<<-sapply(doterms_diminish$child.arr,function(x){length(x)})
return(leaf_DOID)
}
runlayer_diminish<-function(m){
#数据准备
doterms$weight.arr<<-sapply(doterms$weight.arr,function(x){as.numeric(gsub(0.8,0,x))})#预处理：将doterms中的0.8变成0方便后续操作
doterms_diminish<<-doterms%>%#存储处理结果
mutate(gene.w=map2(weight.arr,gene.arr,function(w,g){names(w)<-g;return(w);}))
detach("package:purrr")
#循环准备
n=0
leaf_DOID1<<-NULL
while (n<m) {#递归
print(leaf_DOID1)
aa<-layerdiminish(leaf_DOID1)
leaf_DOID1<<-c(aa,leaf_DOID1)
n=n+1
}
#数据整理
doterms$gene.w<<-doterms_diminish$gene.w
doterms$gene.w<<-sapply(doterms$gene.w,function(x){replace(x,x==0,(1-m*0.1))})
return(doterms)
}
t1<-Sys.time()
runlayer_diminish(5)
t2<-Sys.time()
t2-t1
#检查
doterms[doterms$DOID=="DOID:3963",]$gene.w[[1]]["1956"]
#检查
doterms[doterms$DOID=="DOID:3963",]$gene.w[[1]]["673"]
#思想：1、设置函数，输入为叶子节点，
#2、对其直接父节点进行权重更新（叶子节点来的进行权重-0.1，叶子的兄弟节点取平均），并更新child.arr（丢掉已处理的叶子节点）。
#3、进入下一次函数调用（即叶子节点的直接父节点作为新的叶子节点进行处理）
load("E:\\R\\EnrichDO2\\R\\sysdata.rda")
library(tidyverse)
library(dplyr)
library(purrr)
layerdiminish<-function(leaf_DOID1){
leaf<-doterms_diminish%>%filter(child.len==0,!DOID%in%leaf_DOID1)
leaf_DOID<-leaf$DOID
for(i in 1:dim(leaf)[1]){
#测试叶子节点为DOID:0080522,DOID:3962,DOID:7089,DOID:0050547
#第二层叶子节点：DOID:3969,DOID:3973
#第三层叶子节点:DOID:0080525
#第四层叶子节点：DOID:0080524
#DOID_<-"DOID:3962"
DOID_<-leaf$DOID[i]
parent.arr<-doterms_diminish[doterms_diminish$DOID==DOID_,]$parent.arr[[1]]
gene.w<-doterms_diminish[doterms_diminish$DOID==DOID_,]$gene.w[[1]]
Processing<-doterms_diminish%>%select(DOID,pg=gene.w)%>%filter(DOID%in%parent.arr)#存储每个叶子节点的直接父节点情况,pg为parentgeneW，cg为当前节点的geneW
Processing$cg<-rep(list(gene.w),dim(Processing)[1])
for(j in 1:dim(Processing)[1]){
DOID<-Processing$DOID[j]
pg<-doterms_diminish[doterms_diminish$DOID==DOID,]$gene.w[[1]]
cg<-gene.w
samegene<-intersect(names(pg[pg!=1]),names(cg))
samegene_0<-intersect(samegene,names(pg[pg==0]))
samegene_not0<-intersect(samegene,names(pg[pg!=0]))
pg[samegene_0]<-cg[samegene_0]-0.1
pg[samegene_not0]<-((cg[samegene_not0]-0.1)+pg[samegene_not0])/2#越算到后面，继承来的层级越深，对节点降权越多
if(DOID=="DOID:3963"){
print(DOID_)
print(c(pg["673"],cg["673"]))}
doterms_diminish[doterms_diminish$DOID==DOID,]$gene.w<<-list(pg)
}
}
#处理完所有叶子节点后，在doterms_diminish中删除该批次叶子节点，并更新doterms_diminish中的child.arr
doterms_diminish$child.arr<<-sapply(doterms_diminish$child.arr,function(x){setdiff(x,leaf_DOID)})
doterms_diminish$child.len<<-sapply(doterms_diminish$child.arr,function(x){length(x)})
return(leaf_DOID)
}
runlayer_diminish<-function(m){
#数据准备
doterms$weight.arr<<-sapply(doterms$weight.arr,function(x){as.numeric(gsub(0.8,0,x))})#预处理：将doterms中的0.8变成0方便后续操作
doterms_diminish<<-doterms%>%#存储处理结果
mutate(gene.w=map2(weight.arr,gene.arr,function(w,g){names(w)<-g;return(w);}))
detach("package:purrr")
#循环准备
n=0
leaf_DOID1<<-NULL
while (n<m) {#递归
print(leaf_DOID1)
aa<-layerdiminish(leaf_DOID1)
leaf_DOID1<<-c(aa,leaf_DOID1)
n=n+1
}
#数据整理
doterms$gene.w<<-doterms_diminish$gene.w
doterms$gene.w<<-sapply(doterms$gene.w,function(x){replace(x,x==0,(1-m*0.1))})
return(doterms)
}
t1<-Sys.time()
runlayer_diminish(5)
t2<-Sys.time()
t2-t1
#检查
doterms[doterms$DOID=="DOID:3963",]$gene.w[[1]]["673"]
install.packages("D:/firefoxdownload/org.Hs.eg.db_3.18.0.tar.gz", repos = NULL, type = "source")
install.packages("D:/firefoxdownload/org.Hs.eg.db_3.18.0(1).tar.gz", repos = NULL, type = "source")
BiocManager::install("AnnotationDbi")
BiocManager::install("AnnotationDbi",force = TRUE)
library(AnnotationDbi)
install.packages("D:/firefoxdownload/org.Hs.eg.db_3.18.0(1).tar.gz", repos = NULL, type = "source")
install.packages("D:/firefoxdownload/AnnotationDbi_1.64.1.tar.gz", repos = NULL, type = "source")
detach("package:AnnotationDbi")
install.packages("D:/firefoxdownload/AnnotationDbi_1.64.1.tar.gz", repos = NULL, type = "source")
install.packages("D:/firefoxdownload/org.Hs.eg.db_3.18.0(1).tar.gz", repos = NULL, type = "source")
library(clusterProfiler)
library(org.Hs.eg.db)
remove.packages("AnnotationDbi")
install.packages("D:/firefoxdownload/AnnotationDbi_1.64.1.tar.gz", repos = NULL, type = "source")
library(clusterProfiler)
library(org.Hs.eg.db)
library(org.Hs.eg.db)
library(clusterProfiler)
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
ego <- enrichGO(gene = gene,
OrgDb = org.Hs.eg.db,
keyType = "ENTREZID",
pvalueCutoff =0.05,
qvalueCutoff = 0.05,
pAdjustMethod = "BH",
ont="all",
readable =T)
goplot(ego)
goplot(ego)
ego <- enrichGO(gene          = gene,
universe      = names(geneList),
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
goplot(ego)
gene
jpg("E:/tu.jpg")
jpeg("E:/tu.jpeg")
goplot(ego)
dev.off()
kk <- enrichKEGG(gene = gene,
organism = "hsa",
pvalueCutoff =0.05,
qvalueCutoff =1)
library("pathview")
install.packages("pathview")
BiocManager::install("pathview")
install.packages("D:/firefoxdownload/pathview_1.42.0.tar.gz", repos = NULL, type = "source")
install.packages("XML")
install.packages("D:/firefoxdownload/KEGGgraph_1.62.0.tar.gz", repos = NULL, type = "source")
install.packages("D:/firefoxdownload/pathview_1.42.0.tar.gz", repos = NULL, type = "source")
library("pathview")
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = "hsa04110",
species    = "hsa",
limit= list(gene=max(abs(geneList)), cpd=1))
hsa04110
View(kk)
kk@result
library(DOSE)
library(DOSE)
data(geneList)
y <- gseDO(geneList,
minGSSize     = 120,
pvalueCutoff  = 0.2,
pAdjustMethod = "BH",
verbose       = FALSE)
View(y)
head(y, 3)
View(y)
y@result
result<-y@result
View(result)
install.packages("D:/firefoxdownload/topGO-master.zip", repos = NULL, type = "win.binary")
library(topGO-master)
library(topGO)
BiocManager::install("topGO")
install.packages("D:/firefoxdownload/topGO_2.54.0.tar.gz", repos = NULL, type = "source")
install.packages("SparseM")
install.packages("matrixStats")
install.packages("D:/firefoxdownload/topGO_2.54.0.tar.gz", repos = NULL, type = "source")
library(topGO)
library(ALL)
install.packages("ALL")
library(ALL)
install.packages("D:/firefoxdownload/ALL_1.44.0.tar.gz", repos = NULL, type = "source")
library(ALL)
data(ALL)
data(geneList)# 利用R包自带的包含P值信息的geneList
affyLib <- paste(annotation(ALL), "db", sep = ".")
library(package = affyLib, character.only = TRUE)
install.packages("hgu95av2.db")
library(package = affyLib, character.only = TRUE)
BiocManager::install("hgu95av2.db")
affyLib
install.packages("D:/firefoxdownload/hgu95a.db_3.13.0.tar.gz", repos = NULL, type = "source")
library(package = affyLib, character.only = TRUE)
annotation(ALL)
library(package = hgu95a.db, character.only = TRUE)
sampleGOdata <- new("topGOdata",
description = "Simple session",
ontology = "BP",
allGenes = geneList,
geneSel = topDiffGenes,
nodeSize = 10,
annot = annFUN.db,
#affyLib = affyLib
)
library(AnnotationDbi)
affyLib <- paste(annotation(ALL), "db", sep = ".")
affyLib
library(package = affyLib, character.only = TRUE)
install.packages("D:/firefoxdownload/hgu95av2.db_3.13.0.tar.gz", repos = NULL, type = "source")
library(package = affyLib, character.only = TRUE)
sampleGOdata <- new("topGOdata",
description = "Simple session",
ontology = "BP",
allGenes = geneList,
geneSel = topDiffGenes,
nodeSize = 10,
annot = annFUN.db,
affyLib = affyLib)
resultFisher <- runTest(sampleGOdata, algorithm = "classic", statistic = "fisher")
sig.tab <- GenTable(sampleGOdata,Fis = resultFisher, topNodes = 100)
printGraph(sampleGOdata, resultFisher, firstSigNodes = 5, fn.prefix = "tGO", useInfo = "all", pdfSW = TRUE)
getwd()
View(sig.tab)
demo.data=c(1636,351,102,2932,3077,348,4137,54209,5663,5328,23621,3416,3553)
library(EnrichDO2)
doEnrich(interestGenes = demo.data, test = "fisherTest", method = "BH", m = 1, maxG-size=5000,minGsize=5,traditional=FALSE,delta=0.01, result_do=NULL,penalize=T)
doEnrich(interestGenes = demo.data, test = "fisherTest", method = "BH", m = 1, maxGsize=5000,minGsize=5,traditional=FALSE,delta=0.01, result_do=NULL,penalize=T)
head(enrich)
head(enrich)
View(doterms)
View(doterms)
View(enrich)
head(enrich)
head(enrich)
colnames(enrich)
drawHeatmap(interestgenes=demo.data,enrich = enrich,gene_n = 10,fontsize_row = 8,readable=T)
drawHeatmap(interestgenes=demo.data,enrich = enrich,gene_n = 50,fontsize_row = 8,readable=T)
library(readxl)
data<-read_xlsx("D:/项目管理导入.xlsx")
View(data)
library(stringr)
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = "text")
View(data)
data<-data[,c(1:6,8:18)]
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"time","text","time","text",rep("time",3))
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"time","text","time","text",rep("time",3)))
data<-read_xlsx("D:/项目管理导入.xlsx")
colnames(data)
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"time","text","time","text",rep("time",3),rep("text",19)))
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"date","text","date","text",rep("date",3),rep("text",19)))
View(data)
data<-data[,c(1:6,8:19)]
View(data)
paste0(str_split(data$审核日期,"-")[2:3])
str_split(data$审核日期,"-")
sapply(str_split(data$审核日期,"-"),function(x){paste0(x[2:3])})
str_split(data$审核日期,"-")[[1]]
sapply(str_split(data$审核日期,"-"),function(x){paste0(unlist(x)[2:3])})
aa<-sapply(str_split(data$审核日期,"-"),function(x){paste0(unlist(x)[2:3])})
View(aa)
str_split(data$审核日期[i],"-")[[1]]
i=1
str_split(data$审核日期[i],"-")[[1]]
str_split(data$审核日期[i],"-")[[1]][2:3]
paste0(str_split(data$审核日期[i],"-")[[1]][2:3])
aa<-str_split(data$审核日期[i],"-")[[1]][2:3]
paste0(aa)
paste0(aa,collapse = "")
for (i in 1:dim(data)[1]) {
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
data$项目编码<-str_c("P","24",da,"00",i)
}
View(data)
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"date","text","date","text",rep("date",3),rep("text",19)))
data<-data[,c(1:6,8:19)]
i=1
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
str_c("P","24",da,"00",i)
dim(data)[1]
for (i in 1:dim(data)[1]) {
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
data$项目编码<-str_c("P","24",da,"00",i)
}
library(readxl)
library(stringr)
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"date","text","date","text",rep("date",3),rep("text",19)))
data<-data[,c(1:6,8:19)]
for (i in 1:dim(data)[1]) {
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
data$项目编码[i]<-str_c("P","24",da,"00",i)
}
View(data)
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"date","text","date","text",rep("date",3),rep("text",19)))
data<-data[,c(1:6,8:19)]
for (i in 1:dim(data)[1]) {
if(!is.na(data$审核日期[i])){
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
data$项目编码[i]<-str_c("P","24",da,"00",i)
}
}
View(data)
writexl::write_xlsx(data,"D:/结果.xlsx")
data<-read_xlsx("D:/项目管理导入.xlsx",col_types = c(rep("text",11),"date","text","date","text",rep("date",3),rep("text",19)))
data<-data[,c(1:6,8:19)]
for (i in 1:dim(data)[1]) {
if(!is.na(data$审核日期[i])){
if(i<=9){
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
data$项目编码[i]<-str_c("P","24",da,"00",i)
}else{
da<-paste0(str_split(data$审核日期[i],"-")[[1]][2:3],collapse = "")
data$项目编码[i]<-str_c("P","24",da,"0",i)
}
}
}
writexl::write_xlsx(data,"D:/结果.xlsx")
read.delim("C:\\Users\\FF\\Desktop\\给学姐的结果\\2_效能评估\\方法比较\\ENRICHDO2 AD.txt")
a<-read.delim("C:\\Users\\FF\\Desktop\\给学姐的结果\\2_效能评估\\方法比较\\ENRICHDO2 AD.txt")
View(a)
load("E:\\科研\\课题组\\富集分析网站\\本体实体数据整理\\学姐格式的所有文件\\gut相似性数据准备.RData")
View(gut)
load("E:\\科研\\课题组\\富集分析网站\\本体实体数据整理\\所有学姐的格式/DO(基因对应的).RData")
View(DO)
gut[["ancestors"]][["7"]]
diff<-read.csv("D:/QQ/DEGs.csv")
View(diff)
library(EnrichDO2)
library(dplyr)
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>1)
diff_gene<-diff$X
View(diff)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>1)
diff_gene<-diff$X
View(diff)
result<-doEnrich(diff_gene)
library(clusterProfiler)
library(org.Hs.eg.db)
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID")
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(result)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(enrich)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.01,diff$p_val_adj<0.01,diff$avg_log2FC>1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(enrich)
result2<-doEnrich(diff_gene$ENTREZID,penalize = F)
View(result2)
library(DOSE)
dose_<-enrichDO(diff_gene$ENTREZID,ont = "DO",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
minGSSize     = 5,
maxGSSize     = 5000,
qvalueCutoff  = 0.05,
readable      = FALSE)
aa<-dose_@result
View(aa)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.01,diff$p_val_adj<0.01,diff$avg_log2FC>2)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
result2<-doEnrich(diff_gene$ENTREZID,penalize = F)
result3<-doEnrich(diff_gene$ENTREZID,traditional = T)
dose_<-enrichDO(diff_gene$ENTREZID,ont = "DO",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
minGSSize     = 5,
maxGSSize     = 5000,
qvalueCutoff  = 0.05,
readable      = FALSE)
aa<-dose_@result
View(aa)
View(result)
View(result2)
View(result3)
View(aa)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>1.5)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(result)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,abs(diff$avg_log2FC)>1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(result)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,abs(diff$avg_log2FC)>=1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(result)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>=1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(result)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC<=-1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
View(result)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>=1)
diff_gene<-diff$X
dose_<-enrichDO(diff_gene,ont = "DO",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
minGSSize     = 5,
maxGSSize     = 5000,
qvalueCutoff  = 0.05,
readable      = T)
diff<-read.csv("D:/QQ/DEGs.csv")
diff<-filter(diff,diff$p_val<0.05,diff$p_val_adj<0.05,diff$avg_log2FC>=1)
diff_gene<-diff$X
diff_gene<-bitr(diff_gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = "org.Hs.eg.db")
result<-doEnrich(diff_gene$ENTREZID)
#result2<-doEnrich(diff_gene$ENTREZID,penalize = F)
result3<-doEnrich(diff_gene$ENTREZID,traditional = T)
dose_<-enrichDO(diff_gene$ENTREZID,ont = "DO",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
minGSSize     = 5,
maxGSSize     = 5000,
qvalueCutoff  = 0.05,
readable      = FALSE)
aa<-dose_@result
View(result)
View(result)
View(enrich)
View(result3)
View(result)
result<-doEnrich(diff_gene$ENTREZID,maxGsize = 2000)
View(result)
result<-doEnrich(diff_gene$ENTREZID,maxGsize = 1500)
View(result)
result<-doEnrich(diff_gene$ENTREZID,maxGsize = 1000)
View(result)
#每次构建首先删除NAMESPACE和man下面的文件，然后运行以下所有指令
rm(list = ls()) #清除当前环境所有变量
setwd("E:\\R\\EnrichDO2_new/EnrichDO/")
usethis::use_readme_rmd()
#每次构建首先删除NAMESPACE和man下面的文件，然后运行以下所有指令
rm(list = ls()) #清除当前环境所有变量
setwd("E:\\R\\EnrichDO2_new/EnrichDO/")
#file.edit("DESCRIPTION")#有文章说这一步一定要用 函数file.edit() 来修改DESCRIPTION文件！！否则封包的时候会报错！！！
#setwd("D: /科研/课题组/富集分析网站/R包/Enri chD02") #这一步设置到文档即可
#library (devtools)
library(roxygen2)
#######################数据准备
#load("E:\\科研\\课题组\\富集分析网站\\R包\\data\\enrich_demo.RData")
#demo<-enrich_demo
#新版数据
load("E:\\R\\EnrichDO2\\改进后的R\\底层数据\\Data20240401\\doterms.RData")
#新版数据
load("E:\\R\\EnrichDO2\\改进后的R\\底层数据\\Data20240401\\geneids.RData")
dotermgenes<-geneids
load("R/sysdata.rda")
#######################数据准备
#load("E:\\科研\\课题组\\富集分析网站\\R包\\data\\enrich_demo.RData")
#demo<-enrich_demo
#新版数据
a<-load("E:\\R\\EnrichDO2\\改进后的R\\底层数据\\Data20240401\\doterms.RData")
load("R/sysdata.rda")
load("R/sysdata.rda")
rm(demo)
# load("R/sysdata.rda")
# rm(demo)
usethis::use_data(doterms , dotermgenes, internal =TRUE )#设置internal =TRUE则不会创建data文件夹#如果想要包含解析后的数据，并且用户不可以使用，将这些数据放到R/sysdata.rda，这些数据可以是函数运行所需要的
# load("R/sysdata.rda")
# rm(demo)
usethis::use_data(doterms , dotermgenes, internal =TRUE )#设置internal =TRUE则不会创建data文件夹#如果想要包含解析后的数据，并且用户不可以使用，将这些数据放到R/sysdata.rda，这些数据可以是函数运行所需要的
devtools::document()#编写R包函数说明文档 DOCUMENT
#usethis::use_vignette("EnrichDO")#生成项目说明文档PDF版#注意，若已经创建好了，直接修改即可，运行该代码会提示你是否覆盖
usethis::use_mit_license()#许可证设置
devtools::check()
devtools::check()
#每次构建首先删除NAMESPACE和man下面的文件，然后运行以下所有指令
rm(list = ls()) #清除当前环境所有变量
setwd("E:\\R\\EnrichDO2_new/EnrichDO/")
########################文件准备
devtools::document()#编写R包函数说明文档 DOCUMENT
#usethis::use_vignette("EnrichDO")#生成项目说明文档PDF版#注意，若已经创建好了，直接修改即可，运行该代码会提示你是否覆盖
usethis::use_mit_license()#许可证设置
devtools::check()
#一步到位
devtools::build(vignettes = TRUE, manual = TRUE)
